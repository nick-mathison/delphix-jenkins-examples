pipeline {
    agent any

    environment {
        def provision_successful = false
        def vdb_id = ""
        def vdb_name = ""
        test_error = 'false'
    }

    stages {

        stage ('Build Application') {
            steps {
                echo ('Building...')
                sleep (40)
            }
        }
        
        stage ('Stand Up Full Application') {
            parallel {
                stage ('Apply Application Install') {
                    steps{
                        echo ('Provisioning Test App...')
                        sleep (31)
                    }
                }
                stage ('Create Front End Data Set') {
                    steps {
                        script {
                            echo ('Provisioning Front End Data Set...')
                            try {
                                // provisionVDBFromBookmark name: 'jknFrnt', bookmarkId: 'Front End App (MS SQL) - Q1 2023', autoSelectRepository: true, fileNameSuffix: 'frnt', credentialId: 'dct_api_key'
                                provisionVDBFromSnapshot name: 'jknFrnt', engineId: '1', sourceDataId: 'Oraclemaster_BZF', autoSelectRepository: true, fileNameSuffix: 'frnt', credentialId: 'dct_api_key'
                            } catch (err) {
                                sleep (120)
                            } finally {
                                currentBuild.rawBuild.@result = hudson.model.Result.SUCCESS
                            }
                        }
                    }
                }
                stage ('Create Back End Data Set') {
                    steps {
                        script {
                            echo ('Provisioning Back End Data Set...')
                            sleep (30)
                            // provisionVDBFromBookmark name: 'jknBack', bookmarkId: 'Back End App (Oracle) - Q1 2023', autoSelectRepository: true, fileNameSuffix: 'back', credentialId: 'dct_api_key'
                            provisionVDBFromSnapshot name: 'jknBack', engineId: '1', sourceDataId: 'Oracle_master', autoSelectRepository: true, fileNameSuffix: 'back', credentialId: 'dct_api_key'
                        }
                    }
                }
            }
        }
        
        stage ('Combine') {
            steps {
                echo ('Combining...')
                sleep (10)
            }
        }

        stage ('Run Tests') {
            parallel {
                stage ('UI') {
                    stages {
                        stage ('Run UI Tests') {
                            steps{
                                echo ('UI Tests...')
                                sleep (26)
                            }
                        }
                        stage ('Send UI Test Results') {
                            steps{
                                echo ('Send UI Test Results...')
                                sleep (5)
                            }
                        }
                    }
                }
                stage ('Unit') {
                    stages {
                        stage ('Run Unit Tests') {
                            steps {
                                script {
                                    echo ('Unit Tests...')
                                    sleep (24)
                                    // catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                                    //    echo ('Identified 7 failing Unit Tests!')
                                    //     test_error = 'true';
                                    //     sh "exit 1"
                                    // }
                                }
                            }
                        }
                        stage ('Send Unit Test Results') {
                            steps{
                                echo ('Send Unit Test Results...')
                                sleep (6)
                            }
                        }
                    }
                }
                stage ('Integ.') {
                    stages {
                        stage ('Run Integration Tests') {
                            steps{
                                echo ('UI Tests...')
                                sleep (30)
                            }
                        }
                        stage ('Send Integration Test Results') {
                            steps{
                                echo ('Send Integration Test Results...')
                                sleep (4)
                            }
                        }
                    }
                }
            }
        }
        
         stage ('Bookmark Database') {
            when {
                equals expected: 'true', actual: test_error
            }
            steps{
                script {
                    echo ('Bookmark VDB... ')
                    withCredentials([string(credentialsId: 'dct_api_key', variable: 'KEY')]) {
                        sh """
                            curl -X 'POST' -k \
                                'https://uvo1bb1czfei9h6qjyy.vm.cld.sr/v3/bookmarks' \
                                -H 'accept: application/json' \
                                -H 'Authorization: ${KEY}' \
                                -H 'Content-Type: application/json' \
                                -d '{
                                    "name": "JKNS-BOOKMARK-$BUILD_NUMBER",
                                    "vdb_ids": [
                                        "jknFrnt",
                                        "jknBack"
                                    ],
                                    "retain_forever": true,
                                    "make_current_account_owner": true
                                }'
                        """
                    }
                }
            }
        }

        stage ('Destroy Full Application') {
            parallel {
                stage ('Destroy Application') {
                    steps {
                        script {
                            echo ('Destroying Application...')
                            sleep (15)
                        }
                    }
                }
                stage ('Destroy Virtual Data Sets') {
                    steps {
                        script {
                            echo ('Destroying  Virtual Data Sets...')
                            deleteVDB name: 'jknFrnt,jknBack', credentialId: 'dct-api-key'
                        }
                    }
                }
            }
        }
    }
}